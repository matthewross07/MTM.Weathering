fl.max$TDS-fl.area$TDS
fl.tot <- rbind(fl.min,fl.area,fl.max)
p.area <- dcast(flux.dat,site~element,value.var='p',fun.aggregate=median,na.rm=T)
r.area <- dcast(flux.dat,element~site,value.var='r.sq',fun.aggregate=median,na.rm=T)
p.area <- dcast(flux.dat,element~site,value.var='p',fun.aggregate=median,na.rm=T)
fl.area$TDS.ind <- rowSums(fl.area[,2:8])
names(flux.dat)
names(flux.dat)
eq.f <- dcast(flux.dat, element~site,value.var='eq',first)
eq.f <- cbind(eq.f,r.area,p.area)
View(eq.f)
write.csv(eq.f, file='ModelEquations.csv')
#save(flux.dat,file='~/Dropbox/Shared Science/NSF_MTM_All/MTM_MudRiver/tidy_data/Flux.Dat.RData')
#write.csv(fl.tot,'flux.dat.minmax.csv')
#ggplotly(m.g)
#fl.area$type <- 'flux'
r.area$type <- 'r2'
#fl.area <- rbind(fl.area,r.area)
#write.csv(fl.area,'flux.kg.ha.csv')
fl.melt <- melt(fl.area,id.vars=c('site','TDS.ind'),value.name='kg.ha')
#dev.off()
# Chunk 9: co2flux
flux.mole <- merge(moles,fl.melt,by.x='Element',by.y='variable')
#Drop tds variable
flux.mole <- flux.mole[,-5]
flux.mole$kg.ha <- as.numeric(flux.mole$kg.ha)
flux.mole$kmole.ha <- flux.mole$kg.ha/(flux.mole$moles)
flux.mole$eq.ha <- (flux.mole$kmole.ha*flux.mole$charge)
flux.mole$Charge <- '-'
flux.mole[flux.mole$charge > 0,'Charge'] <- '+'
flux.mole$site <- factor(flux.mole$site,c('RB','LB','LF','MR'))
ann.hco3 <- dcast(flux.mole[!flux.mole$Element %in% c('NO3.N','HCO3'),],site~.,value.var='eq.ha',sum)
head(ann.hco3)
flux.mole[flux.mole$site == 'LF',]
hco.df <- data.frame(Element=rep('HCO3*',4),moles=rep(61.01,4),
charge=-1,site=ann.hco3$site,kg.ha=rep(0,4),
kmole.ha=abs(ann.hco3[,2]),
eq.ha=ann.hco3[,2],
Charge='-')
flux.mole <- rbind(flux.mole,hco.df)
flux.mole$kg.ha.calc <- flux.mole$kmole.ha*flux.mole$moles
flux.mole[flux.mole$Element == 'HCO3*',]
flux.mole$Element <- factor(flux.mole$Element, c('Ca','Mg','K','Na','Cl','SO4','HCO3*','NO3.N','HCO3'))
ggplot(flux.mole[!flux.mole$Element %in% c('NO3.N','HCO3'),],
aes(y=abs(eq.ha),x=Charge,fill=Element)) + geom_bar(stat='identity') +
facet_wrap(~site) + scale_fill_brewer(type='div',palette='RdYlBu') + ylab('keq/ha')
flux.mole[flux.mole$site=='RB',]
tds.cast <- dcast(flux.mole[!flux.mole$Element %in% c('NO3.N','HCO3'),],
site~.,value.var='kg.ha.calc',sum)
tds.cast
mole.cast <- dcast(flux.mole, site~Element,value.var='kmole.ha')
mole.cast$MgCa <- mole.cast$Mg+mole.cast$Ca
mole.cast$AllAlk <- mole.cast$SO4-mole.cast$'HCO3'/2 # From Lermanetal2007
#Assume rest of available sulfate is matched mole for mole by CO2 produced = Lermanetal2007
#Subtract out all SO4 from reference.
mole.cast$CO2kg.ha <- mole.cast$AllAlk*44
mole.cast$C.g.m2 <- mole.cast$AllAlk*12.01*.1 #Carbon per meter squared
mole.cast
areas <- c(118,68,3400,3600)
mole.cast$TotCo2 <- mole.cast$CO2kg.ha*areas
mole.cast
# Chunk 10: SI1
data <- ic.sc[ic.sc$Element != c('NO3.N'),]
data <- data[!is.na(data$Element),]
data$Baseflow.Percent <- data$p.base
rb <- ggplot(data[data$name=='RB',],aes(x=sc,y=mg.l,color=Baseflow.Percent)) +
facet_wrap(~Element,scales='free_y') + geom_point() + scale_color_continuous(name='Baseflow (%)') +  theme(legend.position=c(.83,.15)) +
ylab('Concentration (mg/l)') +
xlab(expression(paste('SC (',mu,'S/cm'))) +
ggtitle("Rich's Branch (RB, 1st order reference)")
lb <- ggplot(data[data$name=='LB',],aes(x=sc,y=mg.l,color=Baseflow.Percent)) +
facet_wrap(~Element,scales='free_y') + geom_point() + scale_color_continuous(name='Baseflow (%)') +  theme(legend.position=c(.83,.15)) +
ylab('Concentration (mg/l)') +
xlab(expression(paste('SC (',mu,'S/cm'))) +
ggtitle("Laurel Branch (LB, 1st order mined)")
lb
lf <- ggplot(data[data$name=='LF',],aes(x=sc,y=mg.l,color=Baseflow.Percent)) +
facet_wrap(~Element,scales='free_y') + geom_point() + scale_color_continuous(name='Baseflow (%)') +  theme(legend.position=c(.83,.15)) +
ylab('Concentration (mg/l)') +
xlab(expression(paste('SC (',mu,'S/cm'))) +
ggtitle("Left Fork (LF, 4th order reference)")
lf
mr <- ggplot(data[data$name=='MR7',],aes(x=sc,y=mg.l,color=Baseflow.Percent)) +
facet_wrap(~Element,scales='free_y') + geom_point() + scale_color_continuous(name='Baseflow (%)') +  theme(legend.position=c(.83,.15)) +
ylab('Concentration (mg/l)') +
xlab(expression(paste('SC (',mu,'S/cm'))) +
ggtitle("Mud River 7 (MR7, 4th order reference)")
mr
# Chunk 11
lots.of.talk.plots <- function() {
#Generate just the RB.Q figure
png(
file = 'RB.Q.Only.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$RB.Q.mm)
dev.off()
png(
file = 'RB.Q.SC.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$RB.Q.mm, q$RB.SC)
dev.off()
png(
file = 'LB.Q.Only.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$LB.Q.mm)
dev.off()
png(
file = 'LB.Q.SC.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$LB.Q.mm, q$LB.SC)
dev.off()
png(
file = 'LF.Q.Only.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$LF.Q.mm)
dev.off()
png(
file = 'LF.Q.SC.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$LF.Q.mm, q$LF.SC)
dev.off()
png(
file = 'MR.Q.Only.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$MR.Q.mm)
dev.off()
png(
file = 'MR.Q.SC.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$MR.Q.mm, q$MR.SC)
dev.off()
png(
file = 'LBRB.Q.ylim4.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$RB.Q.mm)
lines(q$LB.Q.mm ~ q$min10, col = cols[3], lwd = 1)
legend(
'topleft',
lwd = 2,
lty = 1,
col = c(cols[1], cols[3]),
legend = c('Unmined', 'Mined')
)
dev.off()
png(
file = 'LBRB.Q.ylim1.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
plot(
q$RB.Q.mm ~ q$min10,
col = cols[1],
type = 'l',
lwd = 2,
xaxt = 'n',
xlab = 'Date',
ylab = 'Q (mm/hr)',
ylim = c(0, 1)
)
axis.POSIXct(1,
at = x.axis,
format = "%m/%Y",
labels = T)
lines(q$LB.Q.mm ~ q$min10, col = cols[3], lwd = 1)
legend(
'topleft',
lwd = 2,
lty = 1,
col = c(cols[1], cols[3]),
legend = c('Unmined', 'Mined')
)
dev.off()
png(
file = 'MRLF.Q.ylim4.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
h.plot(q$LF.Q.mm)
lines(q$MR.Q.mm ~ q$min10, col = cols[3], lwd = 1)
legend(
'topleft',
lwd = 2,
lty = 1,
col = c(cols[1], cols[3]),
legend = c('Unmined', 'Mined')
)
dev.off()
png(
file = 'MRLF.Q.ylim1.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 2, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
plot(
q$LF.Q.mm ~ q$min10,
col = cols[1],
type = 'l',
lwd = 2,
xaxt = 'n',
xlab = 'Date',
ylab = 'Q (mm/hr)',
ylim = c(0, 1)
)
axis.POSIXct(1,
at = x.axis,
format = "%m/%Y",
labels = T)
lines(q$MR.Q.mm ~ q$min10, col = cols[3], lwd = 1)
legend(
'topleft',
lwd = 2,
lty = 1,
col = c(cols[1], cols[3]),
legend = c('Unmined', 'Mined')
)
dev.off()
png(
file = 'LBRB.SC.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 1, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
plot(
q$LB.SC ~ q$min10,
type = 'l',
lwd = 2,
col = cols[3],
xlab = 'Date',
xaxt = 'n',
ylab = expression(bold(paste('SC (', mu, 'S/cm)'))),
ylim = c(0, 2000)
)
axis.POSIXct(1,
at = x.axis,
format = "%m/%Y",
labels = T)
lines(q$RB.SC ~ q$min10, lwd = 2, col = cols[1])
legend(
'top',
lwd = 2,
lty = 1,
col = c(cols[1], cols[3]),
legend = c('Unmined', 'Mined'),
bty = 'n',
y.intersp = 0.8
)
dev.off()
png(
file = 'LFMR.SC.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 1, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
plot(
q$MR.SC ~ q$min10,
type = 'l',
lwd = 2,
col = cols[3],
xlab = 'Date',
xaxt = 'n',
ylab = expression(bold(paste('SC (', mu, 'S/cm)'))),
ylim = c(0, 2000)
)
axis.POSIXct(1,
at = x.axis,
format = "%m/%Y",
labels = T)
lines(q$LF.SC ~ q$min10, lwd = 2, col = cols[1])
legend(
'top',
lwd = 2,
lty = 1,
col = c(cols[1], cols[3]),
legend = c('Unmined', 'Mined'),
bty = 'n',
y.intersp = 0.8
)
dev.off()
png(
file = 'LBMR.SC.png',
height = 4,
width = 9,
units = 'in',
res = 250
)
par(
mar = c(4, 5, 1, 4),
cex.axis = 1,
cex.lab = 1.1,
font.lab = 2,
mgp = c(2.5, 1, 0)
)
plot(
q$MR.SC ~ q$min10,
type = 'l',
lwd = 2,
col = cols[3],
xlab = 'Date',
xaxt = 'n',
ylab = expression(bold(paste('SC (', mu, 'S/cm)'))),
ylim = c(0, 2000)
)
axis.POSIXct(1,
at = x.axis,
format = "%m/%Y",
labels = T)
lines(q$LB.SC ~ q$min10, lwd = 2, col = 'black')
legend(
'top',
lwd = 2,
lty = 1,
col = c(cols[3], 'black'),
legend = c('46% Mined', '99% Mined'),
bty = 'n',
y.intersp = 0.8
)
dev.off()
}
# ref <- q$MR.Q.mm*((q$MR.SC-q$RB.SC)/(q$LB.SC-q$RB.SC))
# pmine <- (ref/q$MR.Q.mm)*100
# pmine[pmine>100] <- NA
# png(file='PMineWater.png',height=4,width=9,units='in',res=250)
# par(mar=c(4,5,1,4),cex.axis=1,cex.lab=1.1,font.lab=2,mgp=c(2.5,1,0))
# plot(pmine~q$min10,type='l',xaxt='n',xlab='Date',ylab='% Mine Water',ylim=c(0,100),lwd=2)
#     axis.POSIXct(1, at=x.axis, format="%m/%Y",labels=T)
# dev.off()
#
# bugs <- read.csv('~/Dropbox/Shared Science/NSF_MTM_All/MTM_MudRiver/tidy_data/EPT.Voss.csv')
#
# bugs$min10 <- mdy_hms(bugs$DateTime,tz=mytimezone) + 60*60*24
# head(bugs)
# bugs <- dcast(bugs,min10+Site~.,value.var='Biomass',sum)
# names(bugs) <- c('min10','Site','Biomass')
#
#
# png(file='Unminedbugs.png',height=3,width=9,units='in',res=250)
# bugs$Site <- factor(bugs$Site,levels=c('Unmined','Mined'))
# ggplot(bugs[bugs$Site=='Unmined',],aes(x=min10,y=Biomass)) + geom_area(fill='purple4') +
#   ylab(expression(paste('Biomass (mg/',m^2,')'))) +  xlab("Date")+scale_x_datetime(date_labels = "%b") + ggtitle(expression(paste('Unmined 10 ',km^2,' Watershed, EPT Biomass')))
# dev.off()
#
#
# png(file='MinedBugs.png',height=3,width=9,units='in',res=250)
# bugs$Site <- factor(bugs$Site,levels=c('Unmined','Mined'))
# ggplot(bugs[bugs$Site=='Mined',],aes(x=min10,y=Biomass)) + geom_area(fill='purple4') +
#   ylab(expression(paste('Biomass (mg/',m^2,')'))) +  xlab("Date")+scale_x_datetime(date_labels = "%b") + ggtitle(expression(paste('46% Mined 35 ',km^2,' Watershed, EPT Biomass')))
# dev.off()
#
#
#
# bord <- rgb(0,0,0,0)
# png(file='RB.SC.Only.png',height=3.5,width=9,units='in',res=250,bg=bord)
# par(mgp=c(2,.5,0))
# plot(q$RB.SC~q$min10,xaxt='n',yaxt='n',frame.plot=F,xlab='',ylab='',type='l',col=cols[2],lwd=2.5,ylim=c(0,2000))
# #abline(h=300,col='red',lwd=3)
# axis(4,col.axis=cols[2],at=c(0,1000,2000),line=-.7,font=2)
#     #mtext(expression(bold(paste('SC (',mu,'S/cm)'))),4,line=.8,cex=par()$cex.lab)
# dev.off()
#
# Chunk 12: ky
#
k <- read.csv('~/Desktop/wq.samples.ky.csv',stringsAsFactors=F)
k$SO4 <- as.numeric(k$SO4)
ggplot(k,aes(x=Specific.Conductance..mS.cm.,y=Mg,color=k$Sampling.Site.Name)) + geom_point()
ggplot(k,aes(x=Specific.Conductance..mS.cm.,y=Ca,color=k$Site.type)) + geom_point()
ggplot(k,aes(x=Specific.Conductance..mS.cm.,y=SO4,color=k$Site.type)) + geom_point()
head(ic.sc)
d1 <- ic.sc[ic.sc$Site=='LB_2',]
plot(k$Specific.Conductance..mS.cm., k$SO4,col='blue')
points(mg.l~sc,data=d1[ic.sc$Element=='SO4',],pch=20,col='red')
r.area
